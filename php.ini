[PHP]

;;;;;;;;;;;
; WARNING ;
;;;;;;;;;;;
; This is the default settings file for new PHP installations.
; By default, PHP installs itself with a configuration suitable for
; development purposes, and *NOT* for production purposes.
; For several security-oriented considerations that should be taken
; before going online with your site, please consult php.ini-recommended
; and http://php.net/manual/en/security.php.


;;;;;;;;;;;;;;;;;;;
; About this file ;
;;;;;;;;;;;;;;;;;;;
; This file controls many aspects of PHP's behavior.  In order for PHP to
; read it, it must be named 'php.ini'.  PHP looks for it in the current
; working directory, in the path designated by the environment variable
; PHPRC, and in the path that was defined in compile time (in that order).
; Under Windows, the compile-time path is the Windows directory.  The
; path in which the php.ini file is looked for can be overridden using
; the -c argument in command line mode.
;
; The syntax of the file is extremely simple.  Whitespace and Lines
; beginning with a semicolon are silently ignored (as you probably guessed).
; Section headers (e.g. [Foo]) are also silently ignored, even though
; they might mean something in the future.
;
; Directives are specified using the following syntax:
; directive = value
; Directive names are *case sensitive* - foo=bar is different from FOO=bar.
;
; The value can be a string, a number, a PHP constant (e.g. E_ALL or M_PI), one
; of the INI constants (On, Off, True, False, Yes, No and None) or an expression
; (e.g. E_ALL & ~E_NOTICE), or a quoted string ("foo").
;
; Expressions in the INI file are limited to bitwise operators and parentheses:
; |        bitwise OR
; &        bitwise AND
; ~        bitwise NOT
; !        boolean NOT
;
; Boolean flags can be turned on using the values 1, On, True or Yes.
; They can be turned off using the values 0, Off, False or No.
;
; An empty string can be denoted by simply not writing anything after the equal
; sign, or by using the None keyword:
;
;  foo =         ; sets foo to an empty string
;  foo = none    ; sets foo to an empty string
;  foo = "none"  ; sets foo to the string 'none'
;
; If you use constants in your value, and these constants belong to a
; dynamically loaded extension (either a PHP extension or a Zend extension),
; you may only use these constants *after* the line that loads the extension.
;
; All the values in the php.ini-dist file correspond to the builtin
; defaults (that is, if no php.ini is used, or if you delete these lines,
; the builtin defaults will be identical).


;;;;;;;;;;;;;;;;;;;;
; Language Options ;
;;;;;;;;;;;;;;;;;;;;

pcre.backtrack_limit = 10000000
pcre.recursion_limit = 10000000


; Enable the PHP scripting language engine under Apache.
engine = On

; Allow the <? tag.  Otherwise, only <?php and <script> tags are recognized.
; NOTE: Using short tags should be avoided when developing applications or
; libraries that are meant for redistribution, or deployment on PHP
; servers which are not under your control, because short tags may not
; be supported on the target server. For portable, redistributable code,
; be sure not to use short tags.
short_open_tag = On

; Allow ASP-style <% %> tags.
asp_tags = Off

; The number of significant digits displayed in floating point numbers.
precision = 12

; Enforce year 2000 compliance (will cause problems with non-compliant browsers)
;y2k_compliance = On

; Output buffering allows you to send header lines (including cookies) even
; after you send body content, at the price of slowing PHP's output layer a
; bit.  You can enable output buffering during runtime by calling the output
; buffering functions.  You can also enable output buffering for all files by
; setting this directive to On.  If you wish to limit the size of the buffer
; to a certain size - you can use a maximum number of bytes instead of 'On', as
; a value for this directive (e.g., output_buffering=4096).
output_buffering = Off

; You can redirect all of the output of your scripts to a function.  For
; example, if you set output_handler to "mb_output_handler", character
; encoding will be transparently converted to the specified encoding.
; Setting any output handler automatically turns on output buffering.
; Note: People who wrote portable scripts should not depend on this ini
;       directive. Instead, explicitly set the output handler using ob_start().
;       Using this ini directive may cause problems unless you know what script
;       is doing.
; Note: You cannot use both "mb_output_handler" with "ob_iconv_handler"
;       and you cannot use both "ob_gzhandler" and "zlib.output_compression".
;output_handler =

; Transparent output compression using the zlib library
; Valid values for this option are 'off', 'on', or a specific buffer size
; to be used for compression (default is 4KB)
; Note: Resulting chunk size may vary due to nature of compression. PHP
;       outputs chunks that are few hundreds bytes each as a result of
;       compression. If you prefer a larger chunk size for better
;       performance, enable output_buffering in addition.
; Note: You need to use zlib.output_handler instead of the standard
;       output_handler, or otherwise the output will be corrupted.
zlib.output_compression = Off

; You cannot specify additional output handlers if zlib.output_compression
; is activated here. This setting does the same as output_handler but in
; a different order.
;zlib.output_handler =

; Implicit flush tells PHP to tell the output layer to flush itself
; automatically after every output block.  This is equivalent to calling the
; PHP function flush() after each and every call to print() or echo() and each
; and every HTML block.  Turning this option on has serious performance
; implications and is generally recommended for debugging purposes only.
implicit_flush = Off

; The unserialize callback function will be called (with the undefined class'
; name as parameter), if the unserializer finds an undefined class
; which should be instanciated.
; A warning appears if the specified function is not defined, or if the
; function doesn't include/implement the missing class.
; So only set this entry, if you really want to implement such a
; callback-function.
unserialize_callback_func =

; When floats & doubles are serialized store serialize_precision significant
; digits after the floating point. The default value ensures that when floats
; are decoded with unserialize, the data will remain the same.
serialize_precision = 100

; Safe Mode
;
;safe_mode = Off

; By default, Safe Mode does a UID compare check when
; opening files. If you want to relax this to a GID compare,
; then turn on safe_mode_gid.
;safe_mode_gid = Off

; When safe_mode is on, UID/GID checks are bypassed when
; including files from this directory and its subdirectories.
; (directory must also be in include_path or full path must
; be used when including)
;safe_mode_include_dir =

; When safe_mode is on, only executables located in the safe_mode_exec_dir
; will be allowed to be executed via the exec family of functions.
;safe_mode_exec_dir =

; Setting certain environment variables may be a potential security breach.
; This directive contains a comma-delimited list of prefixes.  In Safe Mode,
; the user may only alter environment variables whose names begin with the
; prefixes supplied here.  By default, users will only be able to set
; environment variables that begin with PHP_ (e.g. PHP_FOO=BAR).
;
; Note:  If this directive is empty, PHP will let the user modify ANY
; environment variable!
;safe_mode_allowed_env_vars = PHP_

; This directive contains a comma-delimited list of environment variables that
; the end user won't be able to change using putenv().  These variables will be
; protected even if safe_mode_allowed_env_vars is set to allow to change them.
;safe_mode_protected_env_vars = LD_LIBRARY_PATH

; open_basedir, if set, limits all file operations to the defined directory
; and below.  This directive makes most sense if used in a per-directory
; or per-virtualhost web server configuration file. This directive is
; *NOT* affected by whether Safe Mode is turned On or Off.
;open_basedir =

; This directive allows you to disable certain functions for security reasons.
; It receives a comma-delimited list of function names. This directive is
; *NOT* affected by whether Safe Mode is turned On or Off.
disable_functions =

; This directive allows you to disable certain classes for security reasons.
; It receives a comma-delimited list of class names. This directive is
; *NOT* affected by whether Safe Mode is turned On or Off.
disable_classes =

; Colors for Syntax Highlighting mode.  Anything that's acceptable in
; <font color="??????"> would work.
;highlight.string  = #DD0000
;highlight.comment = #FF9900
;highlight.keyword = #007700
;highlight.bg      = #FFFFFF
;highlight.default = #0000BB
;highlight.html    = #000000


;
; Misc
;
; Decides whether PHP may expose the fact that it is installed on the server
; (e.g. by adding its signature to the Web server header).  It is no security
; threat in any way, but it makes it possible to determine whether you use PHP
; on your server or not.
expose_php = On


;;;;;;;;;;;;;;;;;;;
; Resource Limits ;
;;;;;;;;;;;;;;;;;;;

max_execution_time = 60
max_input_time = 120
max_input_vars = 1000
memory_limit = 256M

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Error handling and logging ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; error_reporting is a bit-field.  Or each number up to get desired error
; reporting level
; E_ALL             - All errors and warnings
; E_ERROR           - fatal run-time errors
; E_WARNING         - run-time warnings (non-fatal errors)
; E_PARSE           - compile-time parse errors
; E_NOTICE          - run-time notices (these are warnings which often result
;                     from a bug in your code, but it's possible that it was
;                     intentional (e.g., using an uninitialized variable and
;                     relying on the fact it's automatically initialized to an
;                     empty string)
; E_CORE_ERROR      - fatal errors that occur during PHP's initial startup
; E_CORE_WARNING    - warnings (non-fatal errors) that occur during PHP's
;                     initial startup
; E_COMPILE_ERROR   - fatal compile-time errors
; E_COMPILE_WARNING - compile-time warnings (non-fatal errors)
; E_USER_ERROR      - user-generated error message
; E_USER_WARNING    - user-generated warning message
; E_USER_NOTICE     - user-generated notice message
;
; Examples:
;
;   - Show all errors, except for notices
;
error_reporting = E_ALL & ~E_NOTICE & ~E_DEPRECATED
;
;   - Show only errors
;
;error_reporting = E_COMPILE_ERROR|E_ERROR|E_CORE_ERROR
;
;   - Show all errors except for notices
;
;error_reporting = E_ALL & ~E_NOTICE & ~E_DEPRECATED

; Print out errors (as a part of the output).  For production web sites,
; you're strongly encouraged to turn this feature off, and use error logging
; instead (see below).  Keeping display_errors enabled on a production web site
; may reveal security information to end users, such as file paths on your Web
; server, your database schema or other information.
display_errors = On

; Even when display_errors is on, errors that occur during PHP's startup
; sequence are not displayed.  It's strongly recommended to keep
; display_startup_errors off, except for when debugging.
display_startup_errors = Off

; Log errors into a log file (server-specific log, stderr, or error_log (below))
; As stated above, you're strongly advised to use error logging in place of
; error displaying on production web sites.
log_errors = On

; Set maximum length of log_errors. In error_log information about the source is
; added. The default is 1024 and 0 allows to not apply any maximum length at all.
log_errors_max_len = 1024

; Do not log repeated messages. Repeated errors must occur in same file on same
; line until ignore_repeated_source is set true.
ignore_repeated_errors = Off

; Ignore source of message when ignoring repeated messages. When this setting
; is On you will not log errors with repeated messages from different files or
; sourcelines.
ignore_repeated_source = Off

; If this parameter is set to Off, then memory leaks will not be shown (on
; stdout or in the log). This has only effect in a debug compile, and if
; error reporting includes E_WARNING in the allowed list
report_memleaks = On

; Store the last error/warning message in $php_errormsg (boolean).
track_errors = Off

; Disable the inclusion of HTML tags in error messages.
;html_errors = Off

; If html_errors is set On PHP produces clickable error messages that direct
; to a page describing the error or function causing the error in detail.
; You can download a copy of the PHP manual from http://www.php.net/docs.php
; and change docref_root to the base URL of your local copy including the
; leading '/'. You must also specify the file extension being used including
; the dot.
;docref_root = "/phpmanual/"
;docref_ext = .html

; String to output before an error message.
;error_prepend_string = "<font color=ff0000>"

; String to output after an error message.
;error_append_string = "</font>"

; Log errors to specified file.
error_log = error_log

; Log errors to syslog (Event Log on NT, not valid in Windows 95).
;error_log = syslog


;;;;;;;;;;;;;;;;;
; Data Handling ;
;;;;;;;;;;;;;;;;;
;
; Note - track_vars is ALWAYS enabled as of PHP 4.0.3

; The separator used in PHP generated URLs to separate arguments.
; Default is "&".
;arg_separator.output = "&amp;"

; List of separator(s) used by PHP to parse input URLs into variables.
; Default is "&".
; NOTE: Every character in this directive is considered as separator!
;arg_separator.input = ";&"

; This directive describes the order in which PHP registers GET, POST, Cookie,
; Environment and Built-in variables (G, P, C, E & S respectively, often
; referred to as EGPCS or GPC).  Registration is done from left to right, newer
; values override older values.
variables_order = "EGPCS"

; Whether or not to register the EGPCS variables as global variables.  You may
; want to turn this off if you don't want to clutter your scripts' global scope
; with user data.  This makes most sense when coupled with track_vars - in which
; case you can access all of the GPC variables through the $HTTP_*_VARS[],
; variables.
;
; You should do your best to write your scripts so that they do not require
; register_globals to be on;  Using form variables as globals can easily lead
; to possible security problems, if the code is not very well thought of.
;register_globals = Off

; This directive tells PHP whether to declare the argv&argc variables (that
; would contain the GET information).  If you don't use these variables, you
; should turn it off for increased performance.
register_argc_argv = On

; Maximum size of POST data that PHP will accept.
post_max_size = 256M

; This directive is deprecated.  Use variables_order instead.
gpc_order = "GPC"

; Magic quotes
;

; Magic quotes for incoming GET/POST/Cookie data.
;magic_quotes_gpc = Off

; Magic quotes for runtime-generated data, e.g. data from SQL, from exec(), etc.
;magic_quotes_runtime = Off

; Use Sybase-style magic quotes (escape ' with '' instead of \').
;magic_quotes_sybase = Off

; Automatically add files before or after any PHP document.
auto_prepend_file =
auto_append_file =

; As of 4.0b4, PHP always outputs a character encoding by default in
; the Content-type: header.  To disable sending of the charset, simply
; set it to be empty.
;
; PHP's built-in default is text/html
default_mimetype = "text/html"
;default_charset = "iso-8859-1"

; Always populate the $HTTP_RAW_POST_DATA variable.
;always_populate_raw_post_data = On


;;;;;;;;;;;;;;;;;;;;;;;;;
; Paths and Directories ;
;;;;;;;;;;;;;;;;;;;;;;;;;

; UNIX: "/path1:/path2"
include_path = ".:/usr/lib/php:/usr/local/lib/php"
;
; Windows: "\path1;\path2"
;include_path = ".;c:\php\includes"

; The root of the PHP pages, used only if nonempty.
; if PHP was not compiled with FORCE_REDIRECT, you SHOULD set doc_root
; if you are running php as a CGI under any web server (other than IIS)
; see documentation for security issues.  The alternate is to use the
; cgi.force_redirect configuration below
doc_root =

; The directory under which PHP opens the script using /~username used only
; if nonempty.
user_dir =

; Directory in which the loadable extensions (modules) reside.
extension_dir = "/usr/local/lib/php/extensions/no-debug-non-zts-20100525"
zend_extension="/usr/local/IonCube/ioncube_loader_lin_5.4.so"
extension="suhosin.so"
extension = "pdo.so"
extension = "pdo_sqlite.so"
extension = "pdo_mysql.so"
extension = "imagick.so"
extension = "magickwand.so"
extension = "memcache.so"
extension = "apc.so"
extension = "uploadprogress.so"
extension="timezonedb.so"
extension = "newrelic.so"

; Whether or not to enable the dl() function.  The dl() function does NOT work
; properly in multithreaded servers, such as IIS or Zeus, and is automatically
; disabled on them.
enable_dl = On

; cgi.force_redirect is necessary to provide security running PHP as a CGI under
; most web servers.  Left undefined, PHP turns this on by default.  You can
; turn it off here AT YOUR OWN RISK
; **You CAN safely turn this off for IIS, in fact, you MUST.**
; cgi.force_redirect = 1

; if cgi.nph is enabled it will force cgi to always sent Status: 200 with
; every request.
; cgi.nph = 1

; if cgi.force_redirect is turned on, and you are not running under Apache or Netscape
; (iPlanet) web servers, you MAY need to set an environment variable name that PHP
; will look for to know it is OK to continue execution.  Setting this variable MAY
; cause security issues, KNOW WHAT YOU ARE DOING FIRST.
; cgi.redirect_status_env = ;

; cgi.fix_pathinfo provides *real* PATH_INFO/PATH_TRANSLATED support for CGI.  PHP's
; previous behaviour was to set PATH_TRANSLATED to SCRIPT_FILENAME, and to not grok
; what PATH_INFO is.  For more information on PATH_INFO, see the cgi specs.  Setting
; this to 1 will cause PHP CGI to fix it's paths to conform to the spec.  A setting
; of zero causes PHP to behave as before.  Default is zero.  You should fix your scripts
; to use SCRIPT_FILENAME rather than PATH_TRANSLATED.
; cgi.fix_pathinfo=0

; FastCGI under IIS (on WINNT based OS) supports the ability to impersonate
; security tokens of the calling client.  This allows IIS to define the
; security context that the request runs under.  mod_fastcgi under Apache
; does not currently support this feature (03/17/2002)
; Set to 1 if running under IIS.  Default is zero.
; fastcgi.impersonate = 1;

; cgi.rfc2616_headers configuration option tells PHP what type of headers to
; use when sending HTTP response code. If it's set 0 PHP sends Status: header that
; is supported by Apache. When this option is set to 1 PHP will send
; RFC2616 compliant header.
; Default is zero.
;cgi.rfc2616_headers = 0


;;;;;;;;;;;;;;;;
; File Uploads ;
;;;;;;;;;;;;;;;;

; Whether to allow HTTP file uploads.
file_uploads = On

; Temporary directory for HTTP uploaded files (will use system default if not
; specified).
;upload_tmp_dir =

; Maximum allowed size for uploaded files.
upload_max_filesize = 256M


;;;;;;;;;;;;;;;;;;
; Fopen wrappers ;
;;;;;;;;;;;;;;;;;;

; Whether to allow the treatment of URLs (like http:// or ftp://) as files.
allow_url_fopen = On

; Define the anonymous ftp password (your email address)
;from="john@doe.com"

; Define the User-Agent string
; user_agent="PHP"

; Default timeout for socket based streams (seconds)
default_socket_timeout = 60

; If your scripts have to deal with files from Macintosh systems,
; or you are running on a Mac and need to deal with files from
; unix or win32 systems, setting this flag will cause PHP to
; automatically detect the EOL character in those files so that
; fgets() and file() will work regardless of the source of the file.
; auto_detect_line_endings = Off


;;;;;;;;;;;;;;;;;;;;;;
; Dynamic Extensions ;
;;;;;;;;;;;;;;;;;;;;;;
;
; If you wish to have an extension loaded automatically, use the following
; syntax:
;
;
; For example, on Windows:
;
;
; ... or under UNIX:
;
;
; Note that it should be the name of the module only; no directory information
; needs to go here.  Specify the location of the extension with the
; extension_dir directive above.


;Windows Extensions
;Note that MySQL and ODBC support is now built in, so no dll is needed for it.
;


;;;;;;;;;;;;;;;;;;;
; Module Settings ;
;;;;;;;;;;;;;;;;;;;

[Syslog]
; Whether or not to define the various syslog variables (e.g. $LOG_PID,
; $LOG_CRON, etc.).  Turning it off is a good idea performance-wise.  In
; runtime, you can define these variables by calling define_syslog_variables().
;define_syslog_variables  = Off

[mail function]
; For Win32 only.
;SMTP = localhost
smtp_port = 25

; For Win32 only.
;sendmail_from = me@localhost.com

; For Unix only.  You may supply arguments as well (default: "sendmail -t -i").
sendmail_path = "/usr/sbin/sendmail -t -i"

[Java]
;java.class.path = .\php_java.jar
;java.home = c:\jdk
;java.library = c:\jdk\jre\bin\hotspot\jvm.dll
;java.library.path = .\

[SQL]
sql.safe_mode = Off

[ODBC]
;odbc.default_db    =  Not yet implemented
;odbc.default_user  =  Not yet implemented
;odbc.default_pw    =  Not yet implemented

; Allow or prevent persistent links.
odbc.allow_persistent = On

; Check that a connection is still valid before reuse.
odbc.check_persistent = On

; Maximum number of persistent links.  -1 means no limit.
odbc.max_persistent = -1

; Maximum number of links (persistent + non-persistent).  -1 means no limit.
odbc.max_links = -1

; Handling of LONG fields.  Returns number of bytes to variables.  0 means
; passthru.
odbc.defaultlrl = 4096

; Handling of binary data.  0 means passthru, 1 return as is, 2 convert to char.
; See the documentation on odbc_binmode and odbc_longreadlen for an explanation
; of uodbc.defaultlrl and uodbc.defaultbinmode
odbc.defaultbinmode = 1

[MySQL]
; Allow or prevent persistent links.
mysql.allow_persistent = On

; Maximum number of persistent links.  -1 means no limit.
mysql.max_persistent = -1

; Maximum number of links (persistent + non-persistent).  -1 means no limit.
mysql.max_links = -1

; Default port number for mysql_connect().  If unset, mysql_connect() will use
; the $MYSQL_TCP_PORT or the mysql-tcp entry in /etc/services or the
; compile-time value defined MYSQL_PORT (in that order).  Win32 will only look
; at MYSQL_PORT.
mysql.default_port =

; Default socket name for local MySQL connects.  If empty, uses the built-in
; MySQL defaults.
mysql.default_socket =

; Default host for mysql_connect() (doesn't apply in safe mode).
mysql.default_host =

; Default user for mysql_connect() (doesn't apply in safe mode).
mysql.default_user =

; Default password for mysql_connect() (doesn't apply in safe mode).
; Note that this is generally a *bad* idea to store passwords in this file.
; *Any* user with PHP access can run 'echo get_cfg_var("mysql.default_password")
; and reveal this password!  And of course, any users with read access to this
; file will be able to reveal the password as well.
mysql.default_password =

; Maximum time (in seconds) for connect timeout. -1 means no limit
mysql.connect_timeout = 60

; Trace mode. When trace_mode is active (=On), warnings for table/index scans and
; SQL-Errors will be displayed.
mysql.trace_mode = Off

[mSQL]
; Allow or prevent persistent links.
msql.allow_persistent = On

; Maximum number of persistent links.  -1 means no limit.
msql.max_persistent = -1

; Maximum number of links (persistent+non persistent).  -1 means no limit.
msql.max_links = -1

[PostgreSQL]
; Allow or prevent persistent links.
pgsql.allow_persistent = On

; Detect broken persistent links always with pg_pconnect(). Need a little overhead.
pgsql.auto_reset_persistent = Off

; Maximum number of persistent links.  -1 means no limit.
pgsql.max_persistent = -1

; Maximum number of links (persistent+non persistent).  -1 means no limit.
pgsql.max_links = -1

; Ignore PostgreSQL backends Notice message or not.
pgsql.ignore_notice = 0

; Log PostgreSQL backends Noitce message or not.
; Unless pgsql.ignore_notice=0, module cannot log notice message.
pgsql.log_notice = 0

[Sybase]
; Allow or prevent persistent links.
sybase.allow_persistent = On

; Maximum number of persistent links.  -1 means no limit.
sybase.max_persistent = -1

; Maximum number of links (persistent + non-persistent).  -1 means no limit.
sybase.max_links = -1

;sybase.interface_file = "/usr/sybase/interfaces"

; Minimum error severity to display.
sybase.min_error_severity = 10

; Minimum message severity to display.
sybase.min_message_severity = 10

; Compatability mode with old versions of PHP 3.0.
; If on, this will cause PHP to automatically assign types to results according
; to their Sybase type, instead of treating them all as strings.  This
; compatibility mode will probably not stay around forever, so try applying
; whatever necessary changes to your code, and turn it off.
sybase.compatability_mode = Off

[Sybase-CT]
; Allow or prevent persistent links.
sybct.allow_persistent = On

; Maximum number of persistent links.  -1 means no limit.
sybct.max_persistent = -1

; Maximum number of links (persistent + non-persistent).  -1 means no limit.
sybct.max_links = -1

; Minimum server message severity to display.
sybct.min_server_severity = 10

; Minimum client message severity to display.
sybct.min_client_severity = 10

[dbx]
; returned column names can be converted for compatibility reasons
; possible values for dbx.colnames_case are
; "unchanged" (default, if not set)
; "lowercase"
; "uppercase"
; the recommended default is either upper- or lowercase, but
; unchanged is currently set for backwards compatibility
dbx.colnames_case = "unchanged"

[bcmath]
; Number of decimal digits for all bcmath functions.
bcmath.scale = 0

[browscap]
;browscap = extra/browscap.ini

[Informix]
; Default host for ifx_connect() (doesn't apply in safe mode).
ifx.default_host =

; Default user for ifx_connect() (doesn't apply in safe mode).
ifx.default_user =

; Default password for ifx_connect() (doesn't apply in safe mode).
ifx.default_password =

; Allow or prevent persistent links.
ifx.allow_persistent = On

; Maximum number of persistent links.  -1 means no limit.
ifx.max_persistent = -1

; Maximum number of links (persistent + non-persistent).  -1 means no limit.
ifx.max_links = -1

; If on, select statements return the contents of a text blob instead of its id.
ifx.textasvarchar = 0

; If on, select statements return the contents of a byte blob instead of its id.
ifx.byteasvarchar = 0

; Trailing blanks are stripped from fixed-length char columns.  May help the
; life of Informix SE users.
ifx.charasvarchar = 0

; If on, the contents of text and byte blobs are dumped to a file instead of
; keeping them in memory.
ifx.blobinfile = 0

; NULL's are returned as empty strings, unless this is set to 1.  In that case,
; NULL's are returned as string 'NULL'.
ifx.nullformat = 0

[Session]
; Handler used to store/retrieve data.
session.save_handler = files

; Argument passed to save_handler.  In the case of files, this is the path
; where data files are stored. Note: Windows users have to change this
; variable in order to use PHP's session functions.
; As of PHP 4.0.1, you can define the path as: session.save_path = "N;/path"
; where N is an integer.  Instead of storing all the session files in
; /path, what this will do is use subdirectories N-levels deep, and
; store the session data in those directories.  This is useful if you
; or your OS have problems with lots of files in one directory, and is
; a more efficient layout for servers that handle lots of sessions.
; NOTE 1: PHP will not create this directory structure automatically.
;         You can use the script in the ext/session dir for that purpose.
; NOTE 2: See the section on garbage collection below if you choose to
;         use subdirectories for session storage

session.save_path = "/tmp"

; Whether to use cookies.
session.use_cookies = 1

; This option enables administrators to make their users invulnerable to
; attacks which involve passing session ids in URLs; defaults to 0.
; session.use_only_cookies = 1

; Name of the session (used as cookie name).
session.name = PHPSESSID

; Initialize session on request startup.
session.auto_start = 0

; Lifetime in seconds of cookie or, if 0, until browser is restarted.
session.cookie_lifetime = 0

; The path for which the cookie is valid.
session.cookie_path = "/"

; The domain for which the cookie is valid.
session.cookie_domain =

; Handler used to serialize data.  php is the standard serializer of PHP.
session.serialize_handler = php

; Define the probability that the 'garbage collection' process is started
; on every session initialization.
; The probability is calculated by using gc_probability/gc_divisor,
; e.g. 1/100 means there is a 1% chance that the GC process starts
; on each request.

session.gc_probability = 1
session.gc_divisor = 100

; After this number of seconds, stored data will be seen as 'garbage' and
; cleaned up by the garbage collection process.
session.gc_maxlifetime = 1440

; NOTE: If you are using the subdirectory option for storing session files
;       (see session.save_path above), then garbage collection does *not*
;       happen automatically.  You will need to do your own garbage
;       collection through a shell script, cron entry, or some other method.
;       For example, the following script would is the equivalent of
;       setting session.gc_maxlifetime to 1440 (1440 seconds = 24 minutes):
;          cd /path/to/sessions; find -cmin +24 | xargs rm

; PHP 4.2 and less have an undocumented feature/bug that allows you to
; to initialize a session variable in the global scope, albeit register_globals
; is disabled.  PHP 4.3 and later will warn you, if this feature is used.
; You can disable the feature and the warning separately. At this time,
; the warning is only displayed, if bug_compat_42 is enabled.

;session.bug_compat_42 = 1
;session.bug_compat_warn = 1

; Check HTTP Referer to invalidate externally stored URLs containing ids.
; HTTP_REFERER has to contain this substring for the session to be
; considered as valid.
session.referer_check =

; How many bytes to read from the file.
session.entropy_length = 0

; Specified here to create the session id.
session.entropy_file =

;session.entropy_length = 16

;session.entropy_file = /dev/urandom

; Set to {nocache,private,public,} to determine HTTP caching aspects
; or leave this empty to avoid sending anti-caching headers.
session.cache_limiter = nocache

; Document expires after n minutes.
session.cache_expire = 180

; trans sid support is disabled by default.
; Use of trans sid may risk your users security.
; Use this option with caution.
; - User may send URL contains active session ID
;   to other person via. email/irc/etc.
; - URL that contains active session ID may be stored
;   in publically accessible computer.
; - User may access your site with the same session ID
;   always using URL stored in browser's history or bookmarks.
session.use_trans_sid = 0

; The URL rewriter will look for URLs in a defined set of HTML tags.
; form/fieldset are special; if you include them here, the rewriter will
; add a hidden <input> field with the info which is otherwise appended
; to URLs.  If you want XHTML conformity, remove the form entry.
; Note that all valid entries require a "=", even if no value follows.
url_rewriter.tags = "a=href,area=href,frame=src,input=src,form=,fieldset="

[MSSQL]
; Allow or prevent persistent links.
mssql.allow_persistent = On

; Maximum number of persistent links.  -1 means no limit.
mssql.max_persistent = -1

; Maximum number of links (persistent+non persistent).  -1 means no limit.
mssql.max_links = -1

; Minimum error severity to display.
mssql.min_error_severity = 10

; Minimum message severity to display.
mssql.min_message_severity = 10

; Compatability mode with old versions of PHP 3.0.
mssql.compatability_mode = Off

; Connect timeout
;mssql.connect_timeout = 5

; Query timeout
;mssql.timeout = 60

; Valid range 0 - 2147483647.  Default = 4096.
;mssql.textlimit = 4096

; Valid range 0 - 2147483647.  Default = 4096.
;mssql.textsize = 4096

; Limits the number of records in each batch.  0 = all records in one batch.
;mssql.batchsize = 0

; Specify how datetime and datetim4 columns are returned
; On => Returns data converted to SQL server settings
; Off => Returns values as YYYY-MM-DD hh:mm:ss
;mssql.datetimeconvert = On

; Use NT authentication when connecting to the server
mssql.secure_connection = Off

; Specify max number of processes. Default = 25
;mssql.max_procs = 25

[Assertion]
; Assert(expr); active by default.
;assert.active = On

; Issue a PHP warning for each failed assertion.
;assert.warning = On

; Don't bail out by default.
;assert.bail = Off

; User-function to be called if an assertion fails.
;assert.callback = 0

; Eval the expression with current error_reporting().  Set to true if you want
; error_reporting(0) around the eval().
;assert.quiet_eval = 0

[Ingres II]
; Allow or prevent persistent links.
ingres.allow_persistent = On

; Maximum number of persistent links.  -1 means no limit.
ingres.max_persistent = -1

; Maximum number of links, including persistents.  -1 means no limit.
ingres.max_links = -1

; Default database (format: [node_id::]dbname[/srv_class]).
ingres.default_database =

; Default user.
ingres.default_user =

; Default password.
ingres.default_password =

[Verisign Payflow Pro]
; Default Payflow Pro server.
pfpro.defaulthost = "test-payflow.verisign.com"

; Default port to connect to.
pfpro.defaultport = 443

; Default timeout in seconds.
pfpro.defaulttimeout = 30

; Default proxy IP address (if required).
;pfpro.proxyaddress =

; Default proxy port.
;pfpro.proxyport =

; Default proxy logon.
;pfpro.proxylogon =

; Default proxy password.
;pfpro.proxypassword =

[com]
; path to a file containing GUIDs, IIDs or filenames of files with TypeLibs
;com.typelib_file =
; allow Distributed-COM calls
;com.allow_dcom = true
; autoregister constants of a components typlib on com_load()
;com.autoregister_typelib = true
; register constants casesensitive
;com.autoregister_casesensitive = false
; show warnings on duplicate constat registrations
;com.autoregister_verbose = true

[Printer]
;printer.default_printer = ""

[mbstring]
; language for internal character representation.
;mbstring.language = Japanese

; internal/script encoding.
; Some encoding cannot work as internal encoding.
; (e.g. SJIS, BIG5, ISO-2022-*)
;mbstring.internal_encoding = EUC-JP

; http input encoding.
;mbstring.http_input = auto

; http output encoding. mb_output_handler must be
; registered as output buffer to function
;mbstring.http_output = SJIS

; enable automatic encoding translation accoding to
; mbstring.internal_encoding setting. Input chars are
; converted to internal encoding by setting this to On.
; Note: Do _not_ use automatic encoding translation for
;       portable libs/applications.
;mbstring.encoding_translation = Off

; automatic encoding detection order.
; auto means
;mbstring.detect_order = auto

; substitute_character used when character cannot be converted
; one from another
;mbstring.substitute_character = none;

; overload(replace) single byte functions by mbstring functions.
; mail(), ereg(), etc are overloaded by mb_send_mail(), mb_ereg(),
; etc. Possible values are 0,1,2,4 or combination of them.
; For example, 7 for overload everything.
; 0: No overload
; 1: Overload mail() function
; 2: Overload str*() functions
; 4: Overload ereg*() functions
;mbstring.func_overload = 0

[FrontBase]
;fbsql.allow_persistent = On
;fbsql.autocommit = On
;fbsql.default_database =
;fbsql.default_database_password =
;fbsql.default_host =
;fbsql.default_password =
;fbsql.default_user = "_SYSTEM"
;fbsql.generate_warnings = Off
;fbsql.max_connections = 128
;fbsql.max_links = 128
;fbsql.max_persistent = -1
;fbsql.max_results = 128
;fbsql.batchSize = 1000

[Crack]
; Modify the setting below to match the directory location of the cracklib
; dictionary files.  Include the base filename, but not the file extension.
; crack.default_dictionary = "c:\php\lib\cracklib_dict"

[exif]
; Exif UNICODE user comments are handled as UCS-2BE/UCS-2LE and JIS as JIS.
; With mbstring support this will automatically be converted into the encoding
; given by corresponding encode setting. When empty mbstring.internal_encoding
; is used. For the decode settings you can distinguish between motorola and
; intel byte order. A decode setting cannot be empty.
;exif.encode_unicode = ISO-8859-15
;exif.decode_unicode_motorola = UCS-2BE
;exif.decode_unicode_intel    = UCS-2LE
;exif.encode_jis =
;exif.decode_jis_motorola = JIS
;exif.decode_jis_intel    = JIS

; Local Variables:
; tab-width: 4
; End:
date.timezone = "America/Denver"

;
; This file contains the various settings for the New Relic PHP agent. There
; are many options, all of which are described in detail at the following URL:
; https://newrelic.com/docs/php/php-agent-phpini-settings
;

; If you use a full path to the extension you insulate yourself from the
; extension directory changing if you change PHP installations or versions.
; If you do not use an absolute path then the file must be installed in the
; active configuration's extension directory.

[newrelic]
;
; Setting: newrelic.enabled
; Type   : boolean
; Scope  : per-directory
; Default: true
; Info   : Enable or disable the agent. Please note that you cannot globally
;          disable the agent and then selectively enable it on a per-directory
;          basis. If you disable the agent in the global INI file then the
;          agent will not initialize at all. However, you can selectively
;          disable the agent on a per-directory basis.
;
;newrelic.enabled = true

;
; Setting: newrelic.license
; Type   : string
; Scope  : per-directory
; Default: none
; Info   : Sets the New Relic license key to use. This can vary from directory
;          to directory if you are running a multi-tenant system. By special
;          dispensation if you upgraded from a previous version of the agent
;          where the license key was set in the daemon, the installation and
;          upgrade script will have preserved your license key from the file
;          /etc/newrelic/newrelic.cfg, but ONLY if you installed via rpm/yum
;          or dpkg. The key is saved in /etc/newrelic/upgrade_please.key
;          and the agent will look for that file if you do not specify a valid
;          license here.
;          It is *STRONGLY* recommended that you set the license key in your
;          INI file(s) and do not rely on the key file being present. Also
;          please note that even if you are not letting the agent start the
;          daemon and are still using newrelic.cfg (see below) the license
;          keyword in that file is no longer obeyed. Instead the agent will
;          use the preserved value of that license from the key file.
;          Once you have updated your INI files to contain the license we
;          urge you to remove /etc/newrelic/upgrade_please.key in order to
;          eliminate the potential for confusion about exactly where the key
;          is coming from.
;
newrelic.license = "91407b7cf31c9dab0ffa7c642c2824a4c72d54ed"

;
; Setting: newrelic.logfile
; Type   : string
; Scope  : system
; Default: none
; Info   : Sets the name of the file to send log messages to.
;
newrelic.logfile = "/var/log/newrelic/php_agent.log"

;
; Setting: newrelic.loglevel
; Type   : string
; Scope  : system
; Default: "info"
; Info   : Sets the level of detail to include in the log file. You should
;          rarely need to change this from the default, and usually only under
;          the guidance of technical support.
;          Must be one of the following values:
;            always, error, warning, info, verbose, debug, verbosedebug
;
;newrelic.loglevel = "info"

;
; Setting: newrelic.high_security
; Type   : boolean
; Scope  : system
; Default: false
; Info   : Enables high security for all applications.  When high security is
;          enabled, the following behavior will take effect:
;          * Data will not be sent to New Relic unless the newrelic-daemon
;            is using SSL.  If the PHP process spawns a newrelic-daemon, it
;            will be configured to use SSL regardless of the value of
;            ```newrelic.daemon.ssl```.
;          * Raw SQL strings will never be gathered, regardless of the value of
;            newrelic.transaction_tracer.record_sql.
;          * Request parameters will never be captured, regardless of the
;            newrelic.attributes configuration settings.
;          * The following API functions will have no effect, and will return
;            false:
;            newrelic_add_custom_parameter
;            newrelic_set_user_attributes
;
;          IMPORTANT:  If you change this setting, you must also change the RPM
;          UI security setting.  If the two settings do not match, then no data
;          will be collected.
;
;newrelic.high_security = false

;
; Setting: newrelic.appname
; Type   : string
; Scope  : per-directory
; Default: "PHP Application"
; Info   : Sets the name of the application that metrics will be reported into.
;          This can in fact be a list of up to 3 application names, each of
;          which must be separated by a semi-colon. The first name in any such
;          list is considered the 'primary' application name and must be unique
;          for each account / license key.
;
newrelic.appname = "PHP Application"

;
; Beginning with version 3.0 of the agent, the daemon can be automatically
; started by the agent. There is no need to start the daemon before starting
; Apache or PHP-FPM. All of the newrelic.daemon.* settings are options that
; control the behavior of the daemon. These settings are converted into the
; appropriate command line options when the agent starts the daemon. This is
; now the preferred method of starting the daemon. There are still usage cases
; (such as using a single daemon for serving multiple Apache instances) where
; you may want to start the daemon via it's init script, but for most users,
; this is the best place to configure and start the daemon.
;
; The agent will only launch the daemon if one isn't already running. Also
; note that the agent will NOT stop the daemon once it has started. If you
; want control over exactly when the daemon starts and stops you can still
; achieve that by creating a daemon configuration file (located by default at
; /etc/newrelic/newrelic.cfg) and running the chkconfig or equivalent command.
; Please see the newrelic.cfg template file for details. That template file
; is located at /usr/lib/newrelic-php5/scripts/newrelic.cfg.template.
;
; Also please note that the options here and in newrelic.cfg are identical,
; except that in this file they are preceded with "newrelic.daemon.".
;

;
; Setting: newrelic.daemon.logfile
; Type   : string
; Scope  : system
; Default: none
; Info   : Sets the name of the file to send daemon log messages to.
;
newrelic.daemon.logfile = "/var/log/newrelic/newrelic-daemon.log"

;
; Setting: newrelic.daemon.loglevel
; Type   : string
; Scope  : system
; Default: "info"
; Info   : Sets the level of detail to include in the daemon log. You should
;          rarely need to change this from the default, and usually only under
;          the guidance of technical support.
;          Must be one of the following values:
;            always, error, warning, info, verbose, debug, verbosedebug
;
;newrelic.daemon.loglevel = "info"

;
; Setting: newrelic.daemon.port
; Type   : string or integer
; Scope  : system
; Default: /tmp/.newrelic.sock
; Info   : Sets how the agent and daemon communicate. How this is set can impact
;          performance. The default is to use a UNIX-domain socket located at
;          /tmp/.newrelic.sock. If you want to use UNIX domain sockets then
;          this value must begin with a "/". If you set this to an integer
;          value in the range 1-65534, then this will instruct the agent to
;          use a normal TCP socket on the port specified. This may be easier
;          to use if you are using a chroot environment.
;
;newrelic.daemon.port = "/tmp/.newrelic.sock"

;
; Setting: newrelic.daemon.ssl
; Type   : boolean
; Scope  : system
; Default: true (as of version 3.6)
; Info   : Sets whether or not communication with New Relic data collectors
;          should use a secure HTTP connection or not.
;
;newrelic.daemon.ssl = true

;
; Setting: newrelic.daemon.ssl_ca_bundle
; Type   : string
; Scope  : system
; Default: none
; Info   : Sets the location of a file containing CA certificates in PEM
;          format. When set, the certificates in this file will be used
;          to authenticate the New Relic collector servers. If
;          newrelic.daemon.ssl_ca_path is also set (see below), the
;          certificates in this file will be searched first, followed by
;          the certificates contained in the newrelic.daemon.ssl_ca_path
;          directory. This setting has no effect when newrelic.daemon.ssl
;          is set to false.
;newrelic.daemon.ssl_ca_bundle = ""

;
; Setting: newrelic.daemon.ssl_ca_path
; Type   : string
; Scope  : system
; Default: none
; info   : Sets the location of a directory containing trusted CA certificates
;          in PEM format. When set, the certificates in this directory will be
;          used to authenticate the New Relic collector servers. If
;          newrelic.daemon.ssl_ca_bundle is also set (see above), it will be
;          searched first followed by the certificates contained in
;          newrelic.daemon.ssl_ca_path. This setting has no effect when
;          newrelic.daemon.ssl is set to false.
;newrelic.daemon.ssl_ca_path = ""

;
; Setting: newrelic.daemon.proxy
; Type   : string
; Scope  : system
; Default: none
; Info   : Sets the host and user credentials to use as an egress proxy. This
;          is only used if your site requires a proxy in order to access
;          external servers on the internet, in this case the New Relic data
;          collection servers. This is expressed in one of the following forms:
;             hostname
;             hostname:port
;             user@hostname
;             user@hostname:port
;             user:password@hostname
;             user:password@hostname:port
;
;newrelic.daemon.proxy = ""

;
; Setting: newrelic.daemon.pidfile
; Type   : string
; Scope  : system
; Default: OS dependent
; Info   : Sets the name of the file to store the running daemon's process ID
;          (PID) in. This file is used by the daemon startup and shutdown
;          script to determine whether or not the daemon is already running.
;
;newrelic.daemon.pidfile = ""

;
; Setting: newrelic.daemon.location
; Type   : string
; Scope  : system
; Default: /usr/bin/newrelic-daemon
; Info   : Sets the name of the daemon executable to launch.
;          Please note that on OpenSolaris where /usr is frequently a read-only
;          file system, the default daemon location is
;          /opt/newrelic/bin/newrelic-daemon.
;
;newrelic.daemon.location = "/usr/bin/newrelic-daemon"

;
; Setting: newrelic.daemon.collector_host
; Type   : string
; Scope  : system
; Default: collector.newrelic.com
; Info   : Sets the host name of the New Relic data collector host to use.
;          Please note that this is NOT any form of local host. It refers to
;          the New Relic provided host. There is very little reason to ever
;          change this from the default except in certain very special
;          circumstances, and then only on instruction from a New Relic sales
;          person or support staff member.
;
;newrelic.daemon.collector_host = "collector.newrelic.com"

;
; Setting: newrelic.daemon.dont_launch
; Type   : integer (0, 1, 2 or 3)
; Scope  : system
; Default: 0
; Info   : If you prefer to have the daemon launched externally before the
;          agent starts up, set this variable to non-zero. The value you
;          choose determines exactly when the agent is allowed to start the
;          daemon:
;          0 - agent can start the daemon any time it needs to
;          1 - non-CLI (i.e Apache / php-fpm) agents can start the daemon
;          2 - only CLI agents can start the daemon
;          3 - the agent will never start the daemon
;
;newrelic.daemon.dont_launch = 0

;
; Setting: newrelic.error_collector.enabled
; Type   : boolean
; Scope  : per-directory
; Default: true
; Info   : Enable the New Relic error collector. This will record the 20 most
;          severe errors per harvest cycle. It is rare to want to disable this.
;          Please also note that your New Relic subscription level may force
;          this to be disabled regardless of any value you set for it.
;
;newrelic.error_collector.enabled = true

;
; Setting: newrelic.error_collector.record_database_errors
; Type   : boolean
; Scope  : per-directory
; Default: false
; Info   : Currently only supported for MySQL database functions. If enabled,
;          this will cause errors returned by various MySQL functions to be
;          treated as if they were PHP errors, and thus subject to error
;          collection. This is only obeyed if the error collector is enabled
;          above and the account subscription level permits error trapping.
;
;newrelic.error_collector.record_database_errors = false

;
; Setting: newrelic.error_collector.prioritize_api_errors
; Type   : boolean
; Scope  : per-directory
; Default: false
; Info   : If the error collector is enabled and you use the New Relic API to
;          notice an error, if this is set to true then assign the highest
;          priority to such errors.
;
;newrelic.error_collector.prioritize_api_errors = false

;
; Setting: newrelic.browser_monitoring.auto_instrument
; Type   : boolean
; Scope  : per-directory
; Default: true
; Info   : Enables or disables automatic real user monitoring ("auto-RUM").
;          When enabled will cause the agent to insert a header and a footer
;          in HTML output that will time the actual end-user experience.
;
;newrelic.browser_monitoring.auto_instrument = true

;
; Setting: newrelic.transaction_tracer.enabled
; Type   : boolean
; Scope  : per-directory
; Default: true
; Info   : Enables or disables the transaction tracer. When enabled this will
;          produce a detailed call graph for any transaction that exceeds a
;          certain threshold (see next entry). Only one transaction trace per
;          application per harvest cycle is stored and it is always the slowest
;          transaction during that cycle. Transaction traces are extremely
;          useful when diagnosing problem spots in your application. Please
;          note that TT's may be disabled by your account subscription level
;          regardless of what you set here.
;
;newrelic.transaction_tracer.enabled = true

;
; Setting: newrelic.transaction_tracer.threshold
; Type   : string with a time specification or the word "apdex_f"
; Scope  : per-directory
; Default: "apdex_f"
; Info   : Specifies the threshold above which a transaction becomes a
;          candidate for the transaction tracer. This can either be an absolute
;          time value like "200ms" or "1s250ms" or "1h30m" or "750us" or the
;          word "apdex_f". This last value, "apdex_f", means "4 times apdex_t".
;          Thus the threshold changes according to your apdex_t setting. This
;          is the default.
;
;newrelic.transaction_tracer.threshold = "apdex_f"

;
; Setting: newrelic.transaction_tracer.detail
; Type   : integer in the range 0-1
; Scope  : per-directory
; Default: 1
; Info   : Sets the level of detail in a transaction trace. Setting this to 0
;          will only show the relatively few PHP functions that New Relic has
;          deemed to be "interesting", as well as any custom functions you set
;          (see below). A setting of 1 will trace and time all user functions.
;
;          In earlier releases of the agent this was known as "top100".
;
;newrelic.transaction_tracer.detail = 1

;
; Setting: newrelic.transaction_tracer.slow_sql
; Type   : boolean
; Scope  : per-directory
; Default: true
; Info   : Enables or disables the "slow SQL" tracer. When enabled, this will
;          record the top 10 slowest SQL calls along with a stack trace of
;          where the call occurred in your code.
;
;newrelic.transaction_tracer.slow_sql = true

;
; Setting: newrelic.transaction_tracer.stack_trace_threshold
; Type   : time specification string ("500ms", "1s750ms" etc)
; Scope  : per-directory
; Default: 500ms
; Info   : Sets the threshold above which the New Relic agent will record a
;          stack trace for a transaction trace.
;
;newrelic.transaction_tracer.stack_trace_threshold = 500

;
; Setting: newrelic.transaction_tracer.explain_enabled
; Type   : boolean
; Scope  : per-directory
; Default: true
; Info   : Enables or disables requesting "explain plans" from MySQL and
;          PostgreSQL databases for slow SQL calls. The threshold for
;          requesting explain plans is defined below.
;
;newrelic.transaction_tracer.explain_enabled = true

;
; Setting: newrelic.transaction_tracer.explain_threshold
; Type   : time specification string ("750ms", "1s 500ms" etc)
; Scope  : per-directory
; Default: 500ms
; Info   : Used by the slow SQL tracer to set the threshold above which an SQL
;          statement is considered "slow", and to set the threshold above which
;          the transaction tracer will request an "explain plan" from the data-
;          base for slow SQL. This latter feature may not be active yet, please
;          refer to the agent release notes to see when it becomes available.
;          Only relevant if explain_enabled above is set to true.
;
;newrelic.transaction_tracer.explain_threshold = 500

;
; Setting: newrelic.transaction_tracer.record_sql
; Type   : "off", "raw" or "obfuscated"
; Scope  : per-directory
; Default: "obfuscated"
; Info   : Sets how SQL statements are recorded (if at all). If this is set to
;          "raw" then no attempt is made at obfuscating SQL statements. THIS IS
;          HIGHLY DISCOURAGED IN PRODUCTION ENVIRONMENTS! Setting this to raw
;          has considerable security implications as it can expose sensitive
;          and private customer data.
;
;newrelic.transaction_tracer.record_sql = "obfuscated"

; Setting: newrelic.transaction_tracer.custom
; Type   : string
; Scope  : per-directory
; Default: none
; Info   : Sets the name(s) of additional functions you want to instrument and
;          appear in transaction traces. This is only meaningful if you have
;          set newrelic.transaction_tracer.detail to 0. This can be a comma-
;          separated list of function or class method names.
;
;newrelic.transaction_tracer.custom = ""

;
; Setting: newrelic.framework
; Type   : string
; Scope  : per-directory
; Default: empty (auto-detect framework)
; Info   : Forces the framework to be one of the supported frameworks. This
;          should only ever be used if the auto-detection fails, in which case
;          we (support.newrelic.com) would very much like to know about the
;          detection failure. Must be one of the following values:
;            cakephp, codeigniter, drupal, drupal8, joomla, kohana, laravel, magento,
;            mediawiki, symfony, wordpress, yii, zend or no_framework.
;          Note that "drupal" covers only Drupal 6 and 7.
;
;newrelic.framework = ""

;
; Setting: newrelic.webtransaction.name.remove_trailing_path
; Type   : boolean
; Scope  : per-directory
; Default: false
; Info   : Used to aid naming transactions correctly when an unsupported
;          framework is being used. This option will cause anything after the
;          script name to be stripped from a URL. For example, setting this
;          would cause the "/xyz/zy" to be stripped from a URL such as
;          "/path/to/foo.php/xyz/zy".
;
;newrelic.webtransaction.name.remove_trailing_path = false

;
; Setting: newrelic.webtransaction.name.functions
; Type   : string
; Scope  : per-directory
; Default: none
; Info   : Unless a specific framework such as Drupal or Wordpress has been
;          detected, transactions are named according to the first script
;          encountered, such as login.php. However, if you use a dispatcher
;          file such as index.php this produces less useful data. If you use
;          a dispatcher to redirect to actions such as "login", "show", "edit"
;          etc, you can set this to the top level functions for those actions,
;          and the function names specified here will be used to name the
;          transaction.
;
;newrelic.webtransaction.name.functions = ""

;
; Setting: newrelic.webtransaction.name.files
; Type   : string
; Scope  : per-directory
; Default: none
; Info   : Same as newrelic.webtransaction.name.functions above but using file
;          names instead of function names. Accepts standard POSIX regular
;          expressions.
;
;newrelic.webtransaction.name.files = ""

;
; Setting: newrelic.daemon.auditlog
; Type   : string
; Scope  : system
; Default: none
; info   : Sets the name of a file to record all uncompressed, un-encoded
;          content that is sent from your machine to the New Relic servers.
;          This includes the full URL for each command along with the payload
;          delivered with the command. This allows you to satisfy yourself
;          that the agent is not sending any sensitive data to our servers.
;          This file must be a different file the the newrelic.daemon.logfile
;          setting above. If you set it to the same name, then audit logging will be
;          silently ignored.
;newrelic.daemon.auditlog = "/var/log/newrelic/audit.log"

;
; Setting: newrelic.transaction_events.enabled
; Type   : boolean
; Scope  : per-directory
; Default: true
; info   : Collect and report transaction analytics event data.  Event data
;          allows the New Relic UI to show additional information such as
;          histograms.  This setting was formerly called
;          newrelic.analytics_events.enabled.
;
;newrelic.transaction_events.enabled = true

;
; Setting: newrelic.attributes.enabled
; Type   : boolean
; Scope  : per-directory
; Default: true
; info   : Enable or disable the collection of attributes generated by the
;          agent or generated by the user though newrelic_add_custom_parameter.
;          This setting will take precedence over all other attribute
;          configuration settings.  For more information, please refer to:
;          https://docs.newrelic.com/docs/subscriptions/agent-attributes
;
;newrelic.attributes.enabled = true

;
; Setting: newrelic.transaction_events.attributes.enabled
;          newrelic.transaction_tracer.attributes.enabled
;          newrelic.error_collector.attributes.enabled
;          newrelic.browser_monitoring.attributes.enabled
; Type   : boolean
; Scope  : per-directory
; Default: true, except for browser_monitoring.attributes.enabled
; info   : Control which destinations receive attributes.
;          These configuration settings will override the .include and .exclude
;          settings below.
;          For more information, please refer to:
;          https://docs.newrelic.com/docs/subscriptions/agent-attributes
;
;          These settings were formerly called:
;          newrelic.transaction_tracer.capture_attributes
;          newrelic.error_collector.capture_attributes
;          newrelic.analytics_events.capture_attributes
;          newrelic.browser_monitoring.capture_attributes
;
;
;newrelic.transaction_events.attributes.enabled = true
;newrelic.transaction_tracer.attributes.enabled = true
;newrelic.error_collector.attributes.enabled = true
;newrelic.browser_monitoring.attributes.enabled = false

;
; Setting: newrelic.attributes.include
;          newrelic.attributes.exclude
;
;          newrelic.transaction_events.attributes.include
;          newrelic.transaction_events.attributes.exclude
;
;          newrelic.transaction_tracer.attributes.include
;          newrelic.transaction_tracer.attributes.exclude
;
;          newrelic.error_collector.attributes.include
;          newrelic.error_collector.attributes.exclude
;
;          newrelic.browser_monitoring.attributes.include
;          newrelic.browser_monitoring.attributes.exclude
;
; Type   : string
; Scope  : per-directory
; Default: none
; info   : Each attribute has a default set of destinations. For example, the
;          'request_uri' attribute's default destinations are errors and
;          transaction traces.  The 'httpResponseCode' attribute's default
;          destinations are errors, transaction traces, and transaction events.
;
;          These configuration options allow complete control over the
;          destinations of attributes.
;
;          To include the attribute whose key is 'alpha' in errors, the
;          configuration is:
;          newrelic.error_collector.include = alpha
;
;          To exclude the attribute whose key is 'alpha' from errors, the
;          configuration is:
;          newrelic.error_collector.exclude = alpha
;
;          The newrelic.attributes.exclude and newrelic.attributes.include
;          settings affect all destinations.
;
;          To exclude the attributes 'beta' and 'gamma' from all destinations,
;          the configuration is:
;          newrelic.attributes.exclude = beta,gamma
;
;          If one of the values in the comma separated list ends in a '*',
;          it will match any suffix.  For example, to exclude any attributes
;          which begin with 'psi', the configuration is:
;          newrelic.attributes.exclude = psi*
;
;          For more information, please refer to:
;          https://docs.newrelic.com/docs/subscriptions/agent-attributes
;
;newrelic.attributes.include = ""
;newrelic.attributes.exclude = ""
;
;newrelic.transaction_events.attributes.include = ""
;newrelic.transaction_events.attributes.exclude = ""
;
;newrelic.transaction_tracer.attributes.include = ""
;newrelic.transaction_tracer.attributes.exclude = ""
;
;newrelic.error_collector.attributes.include = ""
;newrelic.error_collector.attributes.exclude = ""
;
;newrelic.browser_monitoring.attributes.include = ""
;newrelic.browser_monitoring.attributes.exclude = ""

;
; Setting: newrelic.feature_flag
; Type   : string
; Scope  : system
; Default: none
; Info   : Enables experimental features within the PHP agent. These flags are
;          used to allow testing of features that may be provided in future
;          versions of the agent. Please note that we may be unable to provide
;          support for experimental features.
;
;newrelic.feature_flag = ""

; Setting: newrelic.labels
; Type   : string (Use quotes)
; Scope  : per-directory
; Default: none
; Info   : Sets the label names and values to associate with the application.
;          The list is a semi-colon delimited list of colon-separated name and
;          value pairs.
;
;          There are a maximum of 64 label name/value pairs allowed.
;
;          The maximum length of the name and value is 255 characters each. 
;
;          Leading or trailing whitespace in the name or value will be trimmed.
;
;          UTF-8 characters are allowed.
;
;          E.g., "Server:One;Data Center:Primary"
;
;newrelic.labels = ""
zend_extension="/usr/local/Zend/lib/Guard-6.0.0/php-5.4.x/ZendGuardLoader.so"
